"""empty message

Revision ID: fa1ecac83b74
Revises: 
Create Date: 2022-11-10 02:52:38.541300

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.schema import Sequence, CreateSequence, DropSequence

# revision identifiers, used by Alembic.
revision = 'fa1ecac83b74'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(CreateSequence(Sequence(
        name='account_no_seq', start=5000000000, increment=1, minvalue=5000000000, maxvalue=5999999999)))
    op.execute(CreateSequence(Sequence(
        name='card_no_seq', start=5555000000000000, increment=1, minvalue=5555000000000000, maxvalue=5555999999999999)))
    op.create_table('customers',
                    sa.Column('customer_id', sa.Integer(), nullable=False),
                    sa.Column('customer_name', sa.String(
                        length=150), nullable=False),
                    sa.Column('customer_email', sa.String(
                        length=150), nullable=False),
                    sa.Column('customer_address', sa.String(
                        length=200), nullable=True),
                    sa.Column('customer_phone', sa.String(
                        length=20), nullable=True),
                    sa.Column('customer_bvn', sa.CHAR(
                        length=12), nullable=False),
                    sa.Column('password', sa.String(), nullable=False),
                    sa.Column('clearance', sa.String(length=30),
                              server_default='Customer', nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('Now()'), nullable=False),
                    sa.PrimaryKeyConstraint('customer_id'),
                    sa.UniqueConstraint('customer_email')
                    )
    op.create_table('accounts',
                    sa.Column('account_no', sa.CHAR(length=10), server_default=sa.text(
                        "nextval('account_no_seq'::regclass)"), nullable=False),
                    sa.Column('account_name', sa.String(
                        length=150), nullable=False),
                    sa.Column('account_type', sa.String(length=50),
                              server_default='Savings', nullable=False),
                    sa.Column('account_balance', sa.Numeric(),
                              server_default='0.0', nullable=True),
                    sa.Column('account_status', sa.String(),
                              server_default='active', nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('Now()'), nullable=False),
                    sa.Column('customer_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['customer_id'], ['customers.customer_id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('account_no')
                    )
    op.create_table('credit_cards',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('card_no', sa.CHAR(length=16), server_default=sa.text(
                        "nextval('card_no_seq'::regclass)"), nullable=False),
                    sa.Column('card_cvv', sa.CHAR(length=3), nullable=False),
                    sa.Column('card_pin', sa.CHAR(length=4), nullable=False),
                    sa.Column('issued_date', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('Now()'), nullable=False),
                    sa.Column('expiry_date', sa.TIMESTAMP(timezone=True), server_default=sa.text(
                        "Now() + INTERVAL '4 years'"), nullable=False),
                    sa.Column('account_no', sa.CHAR(
                        length=10), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['account_no'], ['accounts.account_no'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('card_no')
                    )
    op.create_table('transactions',
                    sa.Column('transaction_id', sa.Integer(), nullable=False),
                    sa.Column('transaction_type', sa.CHAR(
                        length=2), nullable=False),
                    sa.Column('transaction_amount',
                              sa.Numeric(), nullable=True),
                    sa.Column('transaction_status', sa.String(length=20),
                              server_default='successfull', nullable=True),
                    sa.Column('transaction_date', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('Now()'), nullable=False),
                    sa.Column('transaction_desc', sa.String(
                        length=200), nullable=True),
                    sa.Column('account_no', sa.CHAR(
                        length=10), nullable=False),
                    sa.Column('account_involved', sa.CHAR(
                        length=10), nullable=True),
                    sa.ForeignKeyConstraint(['account_involved'], [
                        'accounts.account_no'], ),
                    sa.ForeignKeyConstraint(
                        ['account_no'], ['accounts.account_no'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('transaction_id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('credit_cards')
    op.drop_table('accounts')
    op.drop_table('customers')
    op.execute(DropSequence("account_no_seq"))
    op.execute(DropSequence("card_no_seq"))
    # ### end Alembic commands ###
